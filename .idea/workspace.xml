<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="CargoProjects">
    <cargoProject FILE="$PROJECT_DIR$/Cargo.toml" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="f6478834-ca64-42a5-9177-17867eba13c5" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/luau-sys/build.rs" beforeDir="false" afterPath="$PROJECT_DIR$/luau-sys/build.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/luau-sys/src/glue/vm.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/luau-sys/src/glue/vm.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/luau-sys/src/glue/vm.h" beforeDir="false" afterPath="$PROJECT_DIR$/luau-sys/src/glue/vm.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/vm/mod.rs" beforeDir="false" afterPath="$PROJECT_DIR$/src/vm/mod.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/vm/raw/buffer.rs" beforeDir="false" afterPath="$PROJECT_DIR$/src/vm/raw/buffer.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/vm/raw/closure.rs" beforeDir="false" afterPath="$PROJECT_DIR$/src/vm/raw/closure.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/vm/raw/mod.rs" beforeDir="false" afterPath="$PROJECT_DIR$/src/vm/raw/mod.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/vm/raw/string.rs" beforeDir="false" afterPath="$PROJECT_DIR$/src/vm/raw/string.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/vm/raw/table.rs" beforeDir="false" afterPath="$PROJECT_DIR$/src/vm/raw/table.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/vm/raw/thread.rs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/vm/raw/userdata.rs" beforeDir="false" afterPath="$PROJECT_DIR$/src/vm/raw/userdata.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/vm/value/boolean.rs" beforeDir="false" afterPath="$PROJECT_DIR$/src/vm/value/boolean.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/vm/value/buffer.rs" beforeDir="false" afterPath="$PROJECT_DIR$/src/vm/value/buffer.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/vm/value/closure.rs" beforeDir="false" afterPath="$PROJECT_DIR$/src/vm/value/closure.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/vm/value/dynamic.rs" beforeDir="false" afterPath="$PROJECT_DIR$/src/vm/value/dynamic.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/vm/value/lightuserdata.rs" beforeDir="false" afterPath="$PROJECT_DIR$/src/vm/value/lightuserdata.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/vm/value/mod.rs" beforeDir="false" afterPath="$PROJECT_DIR$/src/vm/value/mod.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/vm/value/nil.rs" beforeDir="false" afterPath="$PROJECT_DIR$/src/vm/value/nil.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/vm/value/number.rs" beforeDir="false" afterPath="$PROJECT_DIR$/src/vm/value/number.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/vm/value/string.rs" beforeDir="false" afterPath="$PROJECT_DIR$/src/vm/value/string.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/vm/value/table.rs" beforeDir="false" afterPath="$PROJECT_DIR$/src/vm/value/table.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/vm/value/thread.rs" beforeDir="false" afterPath="$PROJECT_DIR$/src/vm/value/thread.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/vm/value/userdata.rs" beforeDir="false" afterPath="$PROJECT_DIR$/src/vm/value/userdata.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/vm/value/vector.rs" beforeDir="false" afterPath="$PROJECT_DIR$/src/vm/value/vector.rs" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MacroExpansionManager">
    <option name="directoryName" value="0bwa01yf" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo"><![CDATA[{
  "associatedIndex": 7
}]]></component>
  <component name="ProjectId" id="2Y1nqSNfwaRPL8vyeAb3Cfqd4hD" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="1" id="Add" />
    <ConfirmationsSetting value="1" id="Remove" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Cargo.Run basic_run.executor": "Run",
    "Cargo.Run compile.executor": "Run",
    "Cargo.Test luau.executor": "Run",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "git-widget-placeholder": "master",
    "last_opened_file_path": "C:/Users/LoganDark/RustroverProjects/luau-rs/Cargo.toml",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "org.rust.cargo.project.model.PROJECT_DISCOVERY": "true",
    "settings.editor.selected.configurable": "preferences.pluginManager",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RunManager" selected="Cargo.Run basic_run">
    <configuration name="Run basic_run" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="run --package luau --example basic_run" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <envs />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Run compile" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="run --package luau --example compile" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <envs />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test luau" type="CargoCommandRunConfiguration" factoryName="Cargo Command">
      <option name="command" value="test --workspace" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <envs />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Cargo.Run basic_run" />
        <item itemvalue="Cargo.Run compile" />
      </list>
    </recent_temporary>
  </component>
  <component name="RustProjectSettings">
    <option name="toolchainHomeDirectory" value="$USER_HOME$/.cargo/bin" />
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>